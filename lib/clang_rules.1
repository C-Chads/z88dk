	section	.text,%1
=
	SECTION	code_compiler

	section	.rodata,%1
=
	SECTION rodata_compiler

	section	.bss,%1
=
	SECTION bss_compiler

	section	.data,%1
=
	SECTION data_compiler

	section	.data.%2,%1
=
	SECTION data_compiler

	assume	adl = 1
=


	db	"%1"%2
=
	defb	%defb(%1)%2

	rb	%1
=
	defs	%1

	db	%1 dup %2
=
	defs	%1,%2

	dw	%1
=
	defw	%1

;;
;; Unnecessary directives
;;

	private	%1
=

	ident	%1
=

;;
;; Change local static references
;;

%1_%2.%3
=
%1_%2_%3

%1_%2.%3.%4
=
%1_%2_%3_%4

;;
;; function labels
;;

_%1:%2
_%1$local:%3
=
_%1:%2

;;
;; Static labels
;;

_%2.%1:
=
_%2_%1:

_%3.%2.%1:
=
_$3_%2_%1:

;;
;; Store + load of local temporary
;;

	ld	(i%3 - %1), l
	ld	(i%3 - %2), h
	ld	l, (i%3 - %1)
	ld	h, (i%3 - %2)
=
	ld	(i%3 - %1), l
	ld	(i%3 - %2), h

%eval 1 = %1 %2 -
	ld	l, (i%3 - %1)
	ld	h, (i%3 - %2)
=
	ld	hl, (i%3 - %1)

%eval 1 = %1 %2 -
	ld	(i%3 - %1), l
	ld	(i%3 - %2), h
=
	ld	(i%3 - %1), hl

%eval 1 = %1 %2 -
	ld	c, (i%3 - %1)
	ld	b, (i%3 - %2)
=
	ld	bc, (i%3 - %1)

%eval 1 = %1 %2 -
	ld	(i%3 - %1), c
	ld	(i%3 - %2), b
=
	ld	(i%3 - %1), bc

%eval 1 = %1 %2 -
	ld	e, (i%3 - %1)
	ld	d, (i%3 - %2)
=
	ld	de, (i%3 - %1)

%eval 1 = %1 %2 -
	ld	(i%3 - %1), e
	ld	(i%3 - %2), d
=
	ld	(i%3 - %1), de

	ld	l, (i%1)
	ld	h, (i%1 + 1)
=
	ld	hl, (i%1 + 0)

